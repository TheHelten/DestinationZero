#Library "GLOBAL" //To make sure that it's verified when it's attempting to activate.
#Include "ZCommon.acs" //ACS Verification.

Script 999 (Void)
{
SetActorProperty(0, APROP_Speed, 0.4);
Delay((35*5));
SetActorProperty(0, APROP_Speed, 1.0);
}

/*int Decrepified=0;
int AlreadyDecrepified=0;

Script 999 (Void)
{
If(AlreadyDecrepified==1)
{
Terminate;
}
Decrepified+=1;
SetActorProperty(0, APROP_Speed, 0.4);
If(Decrepified>=2)
{
ACS_ExecuteAlways(997,0);
Terminate;
}
Delay(175);
If(Decrepified>=2)
{
ACS_ExecuteAlways(997,0);
Terminate;
}
ACS_ExecuteAlways(998,0);
Terminate;
}

Script 998 (Void)
{
Decrepified=0;
AlreadyDecrepified=0;
SetActorProperty(0, APROP_Speed, 1.0);
Terminate;
}

Script 997 (Void)
{
AlreadyDecrepified=1;
Delay(70);
Decrepified-=1;
If(Decrepified==0)
{
ACS_ExecuteAlways(998,0);
Terminate;
}
Restart;
}*/

/*
--Big thanks to the ZDoom wiki and the people whom add on to it.--

Backpacks which are stackable.
There's not a set limit on this, either, so technically you can become a
walking ammo supply. This, however, is truly limited based on how many
you can find; in multiplayer this might become a question of who
gets to the backpack first, or who wants to fight over getting it.
*/

//bool playerbackpack[8] = {FALSE};

Script 998 (Void)
{

int backpackquantity = (CheckInventory("BackpackCounter"));

//Give the respective maximum ammo upgrades.)
SetAmmoCapacity("Clips", GetAmmoCapacity("Clips") + 60);
SetAmmoCapacity("OtherShells", GetAmmoCapacity("OtherShells") + 20);
SetAmmoCapacity("BombShells", GetAmmoCapacity("BombShells") + 4);
SetAmmoCapacity("FTFuel", GetAmmoCapacity("FTFuel") + 50);
SetAmmoCapacity("IndividualRocket", GetAmmoCapacity("IndividualRocket") + 10);
SetAmmoCapacity("Cells", GetAmmoCapacity("Cells") + 40);
SetAmmoCapacity("AbusGunCannonAmmo", GetAmmoCapacity("AbusGunCannonAmmo") + 2);
//Give ammo after expansion is complete.
GiveInventory("Clips",60);
GiveInventory("OtherShells",20);
GiveInventory("BombShells",4);
GiveInventory("FTFuel",50);
GiveInventory("IndividualRocket",10);
GiveInventory("Cells",40);
GiveInventory("AbusGunCannonAmmo",2);
//Execute script to tell player.
ACS_Execute(997,0);
Terminate;
}

Script 997 (Void)
{

int backpackquantity = (CheckInventory("BackpackCounter"));

Delay(1);
SetFont("BIGFONT");
//Print(s:"\cnYou've collected \ch",i:backpackquantity,s:" \cnBackpacks total!");
HudMessage(s:"\cnYou've collected \ch",i:backpackquantity,s:" \cnBackpack(s) total!"; HUDMSG_PLAIN, 2, CR_WHITE, 5.0, 0.85, 3.5);
Terminate;
}

Script 996 Enter
{
//Check for max ammo upon new level
int backpackquantity = (CheckInventory("BackpackCounter"));

//First, reset all the ammo numbers, just incase we've got a fuckup.
SetAmmoCapacity("Clips", 400);
SetAmmoCapacity("OtherShells", 200);
SetAmmoCapacity("BombShells", 40);
SetAmmoCapacity("FTFuel", 300);
SetAmmoCapacity("IndividualRocket", 60);
SetAmmoCapacity("Cells", 300);
SetAmmoCapacity("AbusGunCannonAmmo", 10);

//Then, add back on the values. Easy as Pi. (3.1415926535897932384626433832795...)
SetAmmoCapacity("Clips", GetAmmoCapacity("Clips") + (backpackquantity * 60));
SetAmmoCapacity("OtherShells", GetAmmoCapacity("OtherShells") + (backpackquantity * 20));
SetAmmoCapacity("BombShells", GetAmmoCapacity("BombShells") + (backpackquantity * 4));
SetAmmoCapacity("FTFuel", GetAmmoCapacity("FTFuel") + (backpackquantity * 50));
SetAmmoCapacity("IndividualRocket", GetAmmoCapacity("IndividualRocket") + (backpackquantity * 10));
SetAmmoCapacity("Cells", GetAmmoCapacity("Cells") + (backpackquantity * 40));
SetAmmoCapacity("AbusGunCannonAmmo", GetAmmoCapacity("AbusGunCannonAmmo") + (backpackquantity * 2));

//This is done for everyone, to fix bugs of carrying over max ammo through maps.

}

Script 995 Respawn
{
//Same thing as 996, just on respawn.
int backpackquantity = (CheckInventory("BackpackCounter"));

//Yeah yeah, first thing's first, reset ammo counters.
SetAmmoCapacity("Clips", 400);
SetAmmoCapacity("OtherShells", 200);
SetAmmoCapacity("BombShells", 40);
SetAmmoCapacity("FTFuel", 300);
SetAmmoCapacity("IndividualRocket", 60);
SetAmmoCapacity("Cells", 300);
SetAmmoCapacity("AbusGunCannonAmmo", 10);

//Then the bonus from previous.
SetAmmoCapacity("Clips", GetAmmoCapacity("Clips") + (backpackquantity * 60));
SetAmmoCapacity("OtherShells", GetAmmoCapacity("OtherShells") + (backpackquantity * 20));
SetAmmoCapacity("BombShells", GetAmmoCapacity("BombShells") + (backpackquantity * 4));
SetAmmoCapacity("FTFuel", GetAmmoCapacity("FTFuel") + (backpackquantity * 50));
SetAmmoCapacity("IndividualRocket", GetAmmoCapacity("IndividualRocket") + (backpackquantity * 10));
SetAmmoCapacity("Cells", GetAmmoCapacity("Cells") + (backpackquantity * 40));
SetAmmoCapacity("AbusGunCannonAmmo", GetAmmoCapacity("AbusGunCannonAmmo") + (backpackquantity * 2));

}
